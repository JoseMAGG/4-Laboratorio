/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkg4laboratorio;

import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JOSE-PC
 */
public class GUI extends javax.swing.JFrame {

    ArrayList<Integer> arregloNumeros = new ArrayList<>();

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tamañoVector = new javax.swing.JTextField();
        generar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        preferenciaCB = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        borrar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        posIntercambio1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        posIntercambio2 = new javax.swing.JTextField();
        intercambiar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        posicionTF1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        preferenciaCambiarCB = new javax.swing.JComboBox<>();
        cambiar = new javax.swing.JButton();
        invertir = new javax.swing.JButton();
        ordenar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Vectores Personalizados");

        jLabel1.setText("Ingrese el tamaño del vector:");

        tamañoVector.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tamañoVectorKeyTyped(evt);
            }
        });

        generar.setText("Generar");
        generar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                generarMouseClicked(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Posición", "Elemento"
            }
        ));
        table.setEnabled(false);
        jScrollPane1.setViewportView(table);

        preferenciaCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Aleatorio", "Manual" }));

        jLabel2.setText("Preferencias para llenar el vector:");

        borrar.setText("Borrar");
        borrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                borrarMouseClicked(evt);
            }
        });

        jLabel3.setText("Intercambiar dos elementos del vector:");

        jLabel4.setText("Posición 1:");

        posIntercambio1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                posIntercambio1KeyTyped(evt);
            }
        });

        jLabel5.setText("Posición 2:");

        posIntercambio2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                posIntercambio2KeyTyped(evt);
            }
        });

        intercambiar.setText("Intercambiar");
        intercambiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                intercambiarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addGap(51, 51, 51)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(posIntercambio2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(66, 66, 66)
                                .addComponent(intercambiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(posIntercambio1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel3))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(posIntercambio1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(posIntercambio2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(intercambiar))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jLabel6.setText("Cambiar un elemento del vector:");

        jLabel7.setText("Posición:");

        posicionTF1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                posicionTF1KeyTyped(evt);
            }
        });

        jLabel8.setText("Preferencias:");

        preferenciaCambiarCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Aleatorio", "Manual" }));

        cambiar.setText("Cambiar");
        cambiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cambiarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addGap(51, 51, 51)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(posicionTF1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(preferenciaCambiarCB, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51)
                                .addComponent(cambiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(jLabel6))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(posicionTF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(preferenciaCambiarCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cambiar))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        invertir.setText("Invertir Orden");
        invertir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                invertirMouseClicked(evt);
            }
        });

        ordenar.setText("Ordenar");
        ordenar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ordenarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(126, 126, 126)
                                .addComponent(tamañoVector, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(97, 97, 97)
                                .addComponent(preferenciaCB, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(borrar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(generar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ordenar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(invertir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(tamañoVector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(preferenciaCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(generar)
                            .addComponent(borrar))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(invertir)
                            .addComponent(ordenar))
                        .addGap(26, 26, 26))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @SuppressWarnings("empty-statement")
    private void generarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generarMouseClicked
        // TODO add your handling code here:
        arregloNumeros.clear();
        table.setModel(new DefaultTableModel(null, new String[]{"Posición", "Elemento"}));
        if (tamañoVector.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Señor usuario por favor ingrese un número antes de iniciar.");
        } else {
            int numeroUsuario = Integer.parseInt(tamañoVector.getText());
            if (preferenciaCB.getSelectedItem().equals("Aleatorio")) {
                Random aleatorio = new Random();
                for (int i = 0; i < numeroUsuario; i++) {
                    int numeroAleatorio = aleatorio.nextInt(101);
                    int posicion = i + 1;
                    DefaultTableModel model = (DefaultTableModel) table.getModel();
                    model.addRow(new Object[]{posicion, numeroAleatorio});
                    arregloNumeros.add(numeroAleatorio);
                }
            } else {
                String cadena = "";
                for (int i = 0; i < numeroUsuario; i++) {
                    int numero = 0;
                    while (true) {
                        cadena = JOptionPane.showInputDialog("Digite el elemento en la posición " + (i + 1) + ":");
                        try {
                            numero = Integer.parseInt(cadena);
                            break;
                        } catch (NumberFormatException e) {
                            JOptionPane.showMessageDialog(null, "Ingrese un número entero.");
                        }
                    }
                    int posicion = i + 1;
                    arregloNumeros.add(numero);
                    DefaultTableModel model = (DefaultTableModel) table.getModel();
                    model.addRow(new Object[]{posicion, numero});
                    int num = JOptionPane.showConfirmDialog(null, "¿Desea ingresar más elementos? Si su respuesta es NO"
                            + "se llenarán los elementos restantes con 0.", "Ingresar", JOptionPane.YES_NO_OPTION,
                            JOptionPane.QUESTION_MESSAGE);
                    if (num == JOptionPane.CLOSED_OPTION || num == JOptionPane.NO_OPTION) {
                        for (int j = i + 1; j < numeroUsuario; j++) {
                            int pos = j + 1;
                            arregloNumeros.add(0);
                            model.addRow(new Object[]{pos, 0});
                        }
                        break;
                    }
                }
            }
        }
    }//GEN-LAST:event_generarMouseClicked

    private void borrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_borrarMouseClicked
        table.setModel(new DefaultTableModel(null, new String[]{"Posición", "Elemento"}));
        arregloNumeros.clear();
        tamañoVector.setText("");
        posicionTF1.setText("");
        posIntercambio1.setText("");
        posIntercambio2.setText("");
    }//GEN-LAST:event_borrarMouseClicked

    private void cambiarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cambiarMouseClicked
        // TODO add your handling code here:
        if (posicionTF1.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Señor usuario por favor ingrese la posición del vector que desea cambiar.");
        } else {
            int posicion = Integer.parseInt(posicionTF1.getText());
            if (posicion > arregloNumeros.size() || posicion < 1) {
                JOptionPane.showMessageDialog(null, "Señor usuario por favor ingrese una posición que esté dentro del vector.");
            } else {
                if (preferenciaCambiarCB.getSelectedItem().equals("Aleatorio")) {
                    Random aleatorio = new Random();
                    int numeroAleatorio = aleatorio.nextInt(101);
                    arregloNumeros.set((posicion - 1), numeroAleatorio);
                    DefaultTableModel model = (DefaultTableModel) table.getModel();
                    model.setValueAt(arregloNumeros.get(posicion - 1), (posicion - 1), 1);
                } else {
                    String cadena;
                    int numero;
                    while (true) {
                        cadena = JOptionPane.showInputDialog("Digite el elemento en la posición " + posicion + ":");
                        try {
                            numero = Integer.parseInt(cadena);
                            break;
                        } catch (NumberFormatException e) {
                            JOptionPane.showMessageDialog(null, "Ingrese un número entero.");
                        }
                    }
                    arregloNumeros.set((posicion - 1), numero);
                    DefaultTableModel model = (DefaultTableModel) table.getModel();
                    model.setValueAt(arregloNumeros.get(posicion - 1), (posicion - 1), 1);
                }
            }
        }
    }//GEN-LAST:event_cambiarMouseClicked

    private void tamañoVectorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tamañoVectorKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_tamañoVectorKeyTyped

    private void posIntercambio1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_posIntercambio1KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_posIntercambio1KeyTyped

    private void posicionTF1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_posicionTF1KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_posicionTF1KeyTyped

    private void intercambiarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_intercambiarMouseClicked
        // TODO add your handling code here:
        if (posIntercambio1.getText().equals("") || posIntercambio2.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Señor usuario por favor ingrese las posiciones a intercambiar.");
        } else {
            int pos1 = Integer.parseInt(posIntercambio1.getText()), pos2 = Integer.parseInt(posIntercambio2.getText());
            if (pos1 > arregloNumeros.size() || pos2 > arregloNumeros.size() || pos1 < 1 || pos2 < 1) {
                JOptionPane.showMessageDialog(null, "Señor usuario por favor ingrese posiciones que estén dentro del vector.");
            } else {
                intercambioPosicion(arregloNumeros, (pos1 - 1), (pos2 - 1));
                DefaultTableModel model = (DefaultTableModel) table.getModel();
                model.setValueAt(arregloNumeros.get((pos1 - 1)), (pos1 - 1), 1);
                model.setValueAt(arregloNumeros.get((pos2 - 1)), (pos2 - 1), 1);
            }
        }
    }//GEN-LAST:event_intercambiarMouseClicked

    private void posIntercambio2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_posIntercambio2KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_posIntercambio2KeyTyped

    private void invertirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_invertirMouseClicked
        // TODO add your handling code here:
        invertirOrden(arregloNumeros);
    }//GEN-LAST:event_invertirMouseClicked

    private void ordenarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ordenarMouseClicked
        // TODO add your handling code here:
        ordenar(arregloNumeros);
    }//GEN-LAST:event_ordenarMouseClicked

    private void intercambioPosicion(ArrayList<Integer> x, int pos1, int pos2) {
        int y;
        y = x.get(pos1);
        x.set(pos1, x.get(pos2));
        x.set(pos2, y);
    }

    private void invertirOrden(ArrayList<Integer> x) {
        int j = (x.size() - 1);
        for (int i = 0; i < (x.size() / 2); i++) {
            intercambioPosicion(x, i, j);
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setValueAt(arregloNumeros.get(i), i, 1);
            model.setValueAt(arregloNumeros.get(j), j, 1);
            if (i == j || i + 1 == j) {
                break;
            }
            j--;
        }
    }

    private void ordenar(ArrayList<Integer> x) {
        int m = x.size();
        for (int i = 0; i < (m - 1); i++) {
            int posMenor;
            posMenor = buscarMenor(x, i);
            intercambioPosicion(x, i, posMenor);
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setValueAt(arregloNumeros.get(i), i, 1);
            model.setValueAt(arregloNumeros.get(posMenor), posMenor, 1);
        }
    }

    private int buscarMenor(ArrayList<Integer> x, int posInicial) {
        int m = x.size(), menor = x.get(posInicial), posMenor = posInicial;
        for (int i = (posInicial + 1); i < m; i++) {
            if (menor > x.get(i)) {
                menor = x.get(i);
                posMenor = i;
            }
        }
        return posMenor;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton borrar;
    private javax.swing.JButton cambiar;
    private javax.swing.JButton generar;
    private javax.swing.JButton intercambiar;
    private javax.swing.JButton invertir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton ordenar;
    private javax.swing.JTextField posIntercambio1;
    private javax.swing.JTextField posIntercambio2;
    private javax.swing.JTextField posicionTF1;
    private javax.swing.JComboBox<String> preferenciaCB;
    private javax.swing.JComboBox<String> preferenciaCambiarCB;
    private javax.swing.JTable table;
    private javax.swing.JTextField tamañoVector;
    // End of variables declaration//GEN-END:variables
}
